plugins {
	id "java"
	id "org.springframework.boot" version "3.4.3"
	id "io.spring.dependency-management" version "1.1.7"
    id "com.diffplug.spotless" version "7.0.2"
}

group = "com.pinkfactory"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-validation"

	developmentOnly "org.springframework.boot:spring-boot-devtools"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocVersion"

	implementation "org.bsc.langgraph4j:langgraph4j-core:$langgraph4jVersion" 
	implementation "org.bsc.langgraph4j:langgraph4j-langchain4j:$langgraph4jVersion"
	implementation "dev.langchain4j:langchain4j:$langchain4jVersion"

	implementation "io.github.openfeign:feign-core:$feignVersion"
	implementation "io.github.openfeign:feign-jackson:$feignVersion"

	implementation "org.apache.tika:tika-core:$tikaVersion"
	implementation "org.apache.tika:tika-parsers-standard-package:$tikaVersion"

	implementation "com.github.victools:jsonschema-generator:$jsonschemaGeneratorVersion"
 
	implementation "io.github.haibiiin:json-repair:$jsonRepairVersion"

	compileOnly "org.projectlombok:lombok" 
	annotationProcessor "org.projectlombok:lombok"

	runtimeOnly "com.h2database:h2"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named("test") {
	useJUnitPlatform()
}

spotless {
    java {
        importOrder(
                'java|javax|jakarta',
                'org.springframework',
                'lombok',
                '',
                'org.junit|org.mockito',
                '\\#',
                '\\#org.junit'
        )
        
        palantirJavaFormat()
    	targetExclude("build/**")

        formatAnnotations()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}